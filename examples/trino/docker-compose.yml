services:
  trino-coordinator:
    image: trinodb/trino:latest
    hostname: trino-coordinator
    ports:
      - "8080:8080"
    volumes:
      - ./etc:/etc/trino
    depends_on:
      trino-postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      iceberg-rest:
        condition: service_started
    healthcheck:
      test: ["CMD", "/usr/lib/trino/bin/health-check"]
      interval: 10s
      timeout: 5s
      retries: 5

  trino-postgres:
    image: postgres:13
    container_name: trino-postgres
    environment:
      POSTGRES_USER: trino
      POSTGRES_PASSWORD: password
      POSTGRES_DB: iceberg_metastore
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trino"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    hostname: minio
    container_name: trino-minio-1
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s


  iceberg-rest:
    image: tabulario/iceberg-rest
    container_name: trino-iceberg-rest-1
    ports:
      - "8181:8181"
      depends_on:
      trino-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8181"]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      CATALOG_URI: jdbc:postgresql://trino-postgres:5432/iceberg_metastore
      CATALOG_JDBC_USER: trino
      CATALOG_JDBC_PASSWORD: password
      CATALOG_WAREHOUSE: s3://warehouse/
      CATALOG_IO__IMPL: org.apache.iceberg.aws.s3.S3FileIO
      CATALOG_S3_ENDPOINT: http://minio:9000
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      AWS_REGION: us-east-1
    depends_on:
      trino-postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

volumes:
  minio-data:
