name: Security CI

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

jobs:
  detect:
    name: Detect if Java or Go files changed
    runs-on: ubuntu-latest
    outputs:
      has_java: ${{ steps.detect.outputs.has_java }}
      has_go: ${{ steps.detect.outputs.has_go }}
    steps:
      - uses: actions/checkout@v3

      - name: Detect changes
        id: detect
        run: |
          git fetch origin ${{ github.base_ref }}
          FILES=$(git diff --name-only origin/${{ github.base_ref }})
          echo "FILES=$FILES"

          JAVA_CHANGED=$(echo "$FILES" | grep -E '\.java$|pom\.xml$' || true)
          GO_CHANGED=$(echo "$FILES" | grep -E '\.go$|go\.mod$' || true)

          if [ -n "$JAVA_CHANGED" ]; then
            echo "has_java=true" >> $GITHUB_OUTPUT
          else
            echo "has_java=false" >> $GITHUB_OUTPUT
          fi

          if [ -n "$GO_CHANGED" ]; then
            echo "has_go=true" >> $GITHUB_OUTPUT
          else
            echo "has_go=false" >> $GITHUB_OUTPUT
          fi

  govulncheck:
    name: govulncheck (Go Vuln Scanner)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          check-latest: true
          go-version: "1.23.x"
      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Run govulncheck
        run: govulncheck ./...

  gosec:
    name: GoSec Security Scanner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          check-latest: true
          go-version: "1.23.x"
      - name: Install gosec
        run: curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
      - name: Run gosec
        run: $(go env GOPATH)/bin/gosec -exclude=G115 -severity=high -confidence=medium ./...

  trivy-go:
    name: Trivy Go Scanner
    needs: [detect]
    if: needs.detect.outputs.has_go == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Trivy scan (Go)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './'
          severity: 'HIGH,CRITICAL'
          scanners: 'vuln'
          timeout: 10m
          exit-code: '1'

  trivy-java:
    name: Trivy Java Scanner
    needs: [detect]
    if: needs.detect.outputs.has_java == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Maven
        run: sudo apt-get update && sudo apt-get install -y maven

      - name: Resolve Maven dependencies (for Trivy)
        run: mvn dependency:go-offline

      - name: Trivy scan (Java)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './'
          severity: 'HIGH,CRITICAL'
          scanners: 'vuln'
          timeout: 10m
          exit-code: '1'
