name: Integration Tests
on:
  push:
    branches:
      - "master"
    paths:
      - '**/*.go'
      - '**/*.java'
  pull_request:
    branches:
      - "*"
    paths:
      - '**/*.go'
      - '**/*.java'

env:
  MYSQL_ROOT_PASSWORD: root1234

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.2'

      - name: Set up Java for Maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Start Test Infrastructure
        run: |
          docker compose -f ./drivers/mysql/docker-compose.yml up -d
          docker compose -f ./drivers/postgres/docker-compose.yml up -d
          docker compose -f ./drivers/mongodb/docker-compose.yml up -d
          docker compose -f ./destination/iceberg/local-test/docker-compose.yml up minio mc postgres spark-iceberg -d
          
      - name: Debug MongoDB Setup
        run: |
          echo "=== Waiting for MongoDB to start ==="
          sleep 30
          echo "=== MongoDB Container Status ==="
          docker ps -a | grep mongo
          echo "=== MongoDB Container Logs ==="
          docker logs primary_mongo --tail 100
          echo "=== Testing MongoDB Connection ==="
          docker exec primary_mongo mongosh --port 27017 --eval "db.adminCommand('ping')" || echo "MongoDB not ready yet"
          echo "=== Testing Replica Set Status ==="
          docker exec primary_mongo mongosh "mongodb://admin:password@localhost:27017/admin?replicaSet=rs0" --eval "rs.status()"

      - name: Wait for MySQL
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 30
          retry_wait_seconds: 5
          command: |
            docker exec olake_mysql-test mysql -h localhost -u root -p${{ env.MYSQL_ROOT_PASSWORD }} -e "SELECT 1"

      - name: Wait for PostgreSQL
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 30
          retry_wait_seconds: 5
          command: |
            docker exec olake_postgres-test psql -h localhost -U postgres -d postgres -c "SELECT 1"

      - name: Wait for MongoDB
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 60
          retry_wait_seconds: 10
          command: |
            # First check if MongoDB is running without auth
            docker exec primary_mongo mongosh --port 27017 --eval "db.adminCommand('ping')" >/dev/null 2>&1 && \
            # Check replica set is initialized and has primary
            docker exec primary_mongo mongosh --port 27017 --eval "rs.status().ok" 2>/dev/null | grep -q "1" && \
            docker exec primary_mongo mongosh --port 27017 --eval "rs.isMaster().ismaster" 2>/dev/null | grep -q "true" && \
            # Check admin user authentication
            docker exec primary_mongo mongosh "mongodb://admin:password@localhost:27017/admin?replicaSet=rs0" --eval "db.runCommand({ping: 1})" >/dev/null 2>&1 && \
            # Check mongodb user authentication (this is what the tests will use)
            docker exec primary_mongo mongosh "mongodb://mongodb:secure_password123@localhost:27017/olake_mongodb_test?authSource=admin&replicaSet=rs0" --eval "db.runCommand({ping: 1})" >/dev/null 2>&1

      - name: Set up Data Directories
        run: |
            sudo mkdir -p /home/runner/work/olake/olake/destination/iceberg/local-test/data/postgres-data
            sudo mkdir -p /home/runner/work/olake/olake/destination/iceberg/local-test/data/minio-data
            sudo mkdir -p /home/runner/work/olake/olake/destination/iceberg/local-test/data/ivy-cache
            sudo chown -R 999:999 /home/runner/work/olake/olake/destination/iceberg/local-test/data
            sudo chmod -R 777 /home/runner/work/olake/olake/destination/iceberg/local-test/data

      - name: Install Go Dependencies
        run: go mod download

      - name: Build Project
        run: go build -v ./...

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Iceberg Sink
        working-directory: ./destination/iceberg/olake-iceberg-java-writer
        run: mvn clean package -DskipTests

      - name: Run Integration Tests
        run: go test -v -p 3 ./drivers/mysql/internal/... ./drivers/postgres/internal/... ./drivers/mongodb/internal/... -tags=integration --timeout 0

      - name: Cleanup
        if: always()
        run: |
          docker compose -f ./destination/iceberg/local-test/docker-compose.yml down
          docker compose -f ./drivers/mysql/docker-compose.yml down
          docker compose -f ./drivers/postgres/docker-compose.yml down
          docker compose -f ./drivers/mongodb/docker-compose.yml down
