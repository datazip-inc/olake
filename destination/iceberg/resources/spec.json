{
    "type": "object",
    "properties": {
      "catalog_type": {
        "type": "string",
        "enum": [
          "jdbc",
          "hive",
          "rest",
          "glue"
        ],
        "default": "glue",
        "title": "Catalog Type",
        "description": "Type of catalog to use"
      },
      "aws_access_key": {
        "type": "string",
        "format": "password",
        "title": "AWS Access Key",
        "description": "The AWS access key for authenticating S3 requests, typically a 20-character alphanumeric string"
      },
      "aws_secret_key": {
        "type": "string",
        "format": "password",
        "title": "AWS Secret Key",
        "description": "The AWS secret key for S3 authenticationâ€”typically 40+ characters long"
      },
      "aws_region": {
        "type": "string",
        "title": "AWS Region",
        "description": "Specify the AWS region where the S3 bucket is hosted"
      },
      "iceberg_db": {
        "type": "string",
        "title": "Iceberg Database",
        "description": "Specifies the name of the Iceberg database to be used in the destination"
      },
      "iceberg_s3_path": {
        "type": "string",
        "title": "Iceberg S3 Path",
        "description": "Specifies the S3 path in AWS where the iceberg data will be stored"
      }
    },
    "required": [
      "catalog_type",
      "aws_region",
      "iceberg_db",
      "iceberg_s3_path"
    ],
    "dependencies": {
      "catalog_type": {
        "oneOf": [
          {
            "properties": {
              "catalog_type": {
                "const": "jdbc"
              },
              "jdbc_url": {
                "type": "string",
                "title": "JDBC URL",
                "description": "Specifies the JDBC URL used to connect to the PostgreSQL catalog"
              },
              "jdbc_username": {
                "type": "string",
                "title": "JDBC Username",
                "description": "Specifies the username used to authenticate with the PostgreSQL catalog"
              },
              "jdbc_password": {
                "type": "string",
                "format": "password",
                "title": "JDBC Password",
                "description": "Specifies the password used to authenticate with the PostgreSQL catalog"
              },
              "s3_endpoint": {
                "type": "string",
                "title": "S3 Endpoint",
                "description": "Specifies the endpoint URL for S3 services (e.g., MinIO)"
              },
              "s3_path_style": {
                "type": "boolean",
                "default": true,
                "title": "Use Path Style for S3",
                "description": "Specifies whether path-style access is used for S3; 'true' enables path-style addressing instead of the default virtual-hosted style"
              },
              "s3_use_ssl": {
                "type": "boolean",
                "default": false,
                "title": "Use SSL for S3",
                "description": "Indicates if SSL is enabled for S3 connections; 'false' disables SSL"
              }
            },
            "required": [
              "jdbc_url",
              "jdbc_username",
              "jdbc_password"
            ],
            "additionalProperties": false
          },
          {
            "properties": {
              "catalog_type": {
                "const": "hive"
              },
              "hive_uri": {
                "type": "string",
                "title": "Hive URI",
                "description": "Specifies the URI of the Hive Metastore service used for catalog interactions by the writer"
              },
              "hive_clients": {
                "type": "integer",
                "title": "Hive Clients",
                "description": "Specifies the number of Hive clients allocated to handle interactions with the Hive Metastore"
              },
              "hive_sasl_enabled": {
                "type": "boolean",
                "default": false,
                "title": "Enable SASL for Hive",
                "description": "Indicates if SASL authentication is enabled for the Hive connection; 'false' means SASL is disabled"
              },
              "s3_path_style": {
                "type": "boolean",
                "default": true,
                "title": "Use Path Style for S3",
                "description": "Specifies whether path-style access is used for S3; 'true' enables path-style addressing instead of the default virtual-hosted style"
              },
              "s3_use_ssl": {
                "type": "boolean",
                "default": false,
                "title": "Use SSL for S3",
                "description": "Indicates if SSL is enabled for S3 connections; 'false' disables SSL"
              }
            },
            "required": [
              "hive_uri"
            ],
            "additionalProperties": false
          },
          {
            "properties": {
              "catalog_type": {
                "const": "rest"
              },
              "rest_catalog_url": {
                "type": "string",
                "title": "REST Catalog URI",
                "description": "Specifies the endpoint URI for the REST catalog service the writer will connect to"
              },
              "credential": {
                "type": "string",
                "title": "Credential (OAuth2)",
                "description": "Optional credential used for authenticating REST requests"
              },
              "oauth2_uri": {
                "type": "string",
                "title": "OAuth2 Auth URI",
                "description": "OAuth2 authorization URI for obtaining access tokens"
              },
              "rest_auth_type": {
                "type": "string",
                "title": "REST Auth Type",
                "description": "Type of authentication to use with the REST catalog. Need to use it for only `oauth2"
              },
              "rest_signing_name": {
                "type": "string",
                "title": "REST Signing Name",
                "description": "Optional AWS signing name to be used when authenticating REST requests"
              },
              "rest_signing_region": {
                "type": "string",
                "title": "REST Signing Region",
                "description": "AWS region used for signing REST requests"
              },
              "rest_signing_v_4": {
                "type": "boolean",
                "title": "REST Enable Signature V4",
                "description": "Enable AWS signature version 4 for REST request signing"
              },
              "scope": {
                "type": "string",
                "title": "Scope (OAuth2)",
                "description": "OAuth2 scope to be used during token acquisition"
              },
              "token": {
                "type": "string",
                "format": "password",
                "title": "Token",
                "description": "Optional token used for authenticating with the REST catalog"
              },
              "no_identifier_fields": {
                "type": "boolean",
                "default": false,
                "title": "Disable Identifier Table",
                "description": "Disable creation of Iceberg identifier tables for this catalog, Needed for environments which doesn't support equality deletes based updates (Ex, Databricks unity managed Iceberg tables)"
              }
            },
            "required": [
              "rest_catalog_url"
            ],
            "additionalProperties": false
          },
          {
            "properties": {
              "catalog_type": {
                "const": "glue"
              },
              "sink_rpc_server_host": {
                "type": "string",
                "default": "localhost",
                "title": "Server Host",
                "description": "Host address of the gRPC server"
              },
              "grpc_port": {
                "type": "integer",
                "default": 50051,
                "title": "gRPC Port",
                "description": "Port on which the gRPC server listens (mostly 50051)"
              }
            },
            "required": [
              "sink_rpc_server_host",
              "grpc_port"
            ],
            "additionalProperties": false
          }
        ]
      }
    }
  }