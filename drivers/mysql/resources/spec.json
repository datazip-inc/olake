{
  "type": "object",
  "properties": {
    "backoff_retry_count": {
      "type": "integer",
      "title": "Retry Count",
      "description": "Number of sync retries (exponential backoff on failure)",
      "default": 3
    },
    "database": {
      "type": "string",
      "title": "Database",
      "description": "The name of the database to use for connection"
    },
    "hosts": {
      "type": "string",
      "title": "MySQL Host",
      "description": "Database host addresses for connection"
    },
    "max_threads": {
      "type": "integer",
      "title": "Max Threads",
      "description": "Maximum concurrent threads for data sync",
      "default": 3
    },
    "password": {
      "type": "string",
      "title": "Password",
      "description": "Password for database authentication",
      "format": "password",
      "minLength": 1
    },
    "port": {
      "type": "integer",
      "title": "Port",
      "description": "Database server listening port",
      "default": 3306
    },
    "jdbc_url_params": {
      "type": "object",
      "title": "JDBC URL Parameters",
      "description": "Additional connection parameters to pass to the MySQL JDBC driver",
      "additionalProperties": {
        "type": "string"
      }
    },
    "ssl": {
      "type": "object",
      "title": "SSL Configuration",
      "description": "SSL/TLS configuration for secure database connections",
      "properties": {
        "mode": {
          "type": "string",
          "title": "SSL Mode",
          "description": "The SSL/TLS mode to use for the connection",
          "enum": ["disable", "require", "verify-ca", "verify-full"],
          "default": "disable"
        },
        "server_ca": {
          "type": "string",
          "title": "Server CA Certificate",
          "description": "CA certificate content (PEM format) for server verification"
        },
        "client_cert": {
          "type": "string",
          "title": "Client Certificate",
          "description": "Client certificate content (PEM format) for mutual TLS authentication"
        },
        "client_key": {
          "type": "string",
          "title": "Client Key",
          "description": "Client private key content (PEM format) for mutual TLS authentication"
        }
      },
      "required": ["mode"]
    },
    "update_method": {
      "title": "Update Method",
      "description": "Define how OLake captures data updates from your source",
      "oneOf": [
        {
          "type": "object",
          "title": "Standalone",
          "properties": {
            "type": {
              "const": "Standalone"
            }
          },
          "required": ["type"]
        },
        {
          "type": "object",
          "title": "CDC",
          "properties": {
            "initial_wait_time": {
              "type": "integer",
              "title": "Initial Wait Time",
              "description": "Idle timeout for Bin log reading"
            },
            "type": {
              "const": "CDC"
            }
          },
          "required": ["type", "initial_wait_time"],
          "additionalProperties": false
        }
      ]
    },
    "ssh_config": {
      "title": "SSH Config",
      "description": "OLake uses SSH to connect to the database.",
      "oneOf": [
        {
          "type": "object",
          "title": "No Tunnel",
          "properties": {
            "type": {
              "const": "no_tunnel"
            }
          },
          "required": ["type"]
        },
        {
          "type": "object",
          "title": "SSH Key Authentication",
          "properties": {
            "type": {
              "const": "ssh_key_authentication"
            },
            "host": {
              "type": "string",
              "title": "SSH Host",
              "description": "SSH host address"
            },
            "port": {
              "type": "integer",
              "title": "SSH Port",
              "description": "Port number to connect to the SSH server"
            },
            "username": {
              "type": "string",
              "title": "SSH Username",
              "description": "Username to authenticate with the SSH server"
            },
            "private_key": {
              "type": "string",
              "title": "SSH Private Key",
              "description": "SSH private key to authenticate with the SSH server"
            },
            "passphrase": {
              "type": "string",
              "title": "SSH Passphrase",
              "description": "Passphrase to decrypt the encrypted SSH private key",
              "format": "password"
            }
          },
          "required": ["host", "port", "username", "private_key", "type"]
        },
        {
          "type": "object",
          "title": "SSH Password Authentication",
          "properties": {
            "type": {
              "const": "ssh_password_authentication"
            },
            "host": {
              "type": "string",
              "title": "SSH Host",
              "description": "SSH host address"
            },
            "port": {
              "type": "integer",
              "title": "SSH Port",
              "description": "Port number to connect to the SSH server"
            },
            "username": {
              "type": "string",
              "title": "SSH Username",
              "description": "Username to authenticate with the SSH server"
            },
            "password": {
              "type": "string",
              "title": "SSH Password",
              "description": "Password to authenticate with the SSH server",
              "format": "password",
              "minLength": 1
            }
          },
          "required": ["host", "port", "username", "password", "type"]
        }
      ]
    },
    "username": {
      "type": "string",
      "title": "Username",
      "description": "Username used to authenticate with the database"
    }
  },
  "required": ["hosts", "username", "password", "database", "port"]
}
